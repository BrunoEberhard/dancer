{
   "openapi": "3.0.0",
   "info": {
      "title": "DancerApplication",
      "version": "1.0.0"
   },
   "servers": [
      {
         "url": "http://localhost:8090/"
      }
   ],
   "paths": {
      "/DanceEvent/{id}": {
         "get": {
            "summary": "Gets a DanceEvent by id",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "DanceEvent id",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/DanceEvent"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Not found"
               }
            }
         },
         "delete": {
            "summary": "Delete a DanceEvent",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "DanceEvent id",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation"
               }
            }
         },
         "put": {
            "summary": "Update a DanceEvent",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "DanceEvent id",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/DanceEvent"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successful operation"
               }
            }
         }
      },
      "/DanceEvent": {
         "post": {
            "summary": "Add a new DanceEvent",
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/DanceEvent"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successful operation"
               }
            }
         },
         "get": {
            "summary": "Gets all DanceEvent",
            "parameters": [
               {
                  "name": "offset",
                  "in": "query",
                  "description": "First returned item (starting at 0)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "Number of maximal returned items",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/DanceEvent"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/Organizer/{id}": {
         "get": {
            "summary": "Gets a Organizer by id",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Organizer id",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Organizer"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Not found"
               }
            }
         },
         "delete": {
            "summary": "Delete a Organizer",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Organizer id",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation"
               }
            }
         },
         "put": {
            "summary": "Update a Organizer",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Organizer id",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Organizer"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successful operation"
               }
            }
         }
      },
      "/Organizer": {
         "post": {
            "summary": "Add a new Organizer",
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Organizer"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successful operation"
               }
            }
         },
         "get": {
            "summary": "Gets all Organizer",
            "parameters": [
               {
                  "name": "offset",
                  "in": "query",
                  "description": "First returned item (starting at 0)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "Number of maximal returned items",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/Organizer"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/Location/{id}": {
         "get": {
            "summary": "Gets a Location by id",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Location id",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/Location"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Not found"
               }
            }
         },
         "delete": {
            "summary": "Delete a Location",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Location id",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation"
               }
            }
         },
         "put": {
            "summary": "Update a Location",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "Location id",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Location"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successful operation"
               }
            }
         }
      },
      "/Location": {
         "post": {
            "summary": "Add a new Location",
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/Location"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successful operation"
               }
            }
         },
         "get": {
            "summary": "Gets all Location",
            "parameters": [
               {
                  "name": "offset",
                  "in": "query",
                  "description": "First returned item (starting at 0)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "Number of maximal returned items",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/Location"
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/User/{id}": {
         "get": {
            "summary": "Gets a User by id",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "User id",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "$ref": "#/components/schemas/User"
                        }
                     }
                  }
               },
               "404": {
                  "description": "Not found"
               }
            }
         },
         "delete": {
            "summary": "Delete a User",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "User id",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation"
               }
            }
         },
         "put": {
            "summary": "Update a User",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "User id",
                  "required": true,
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/User"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successful operation"
               }
            }
         }
      },
      "/User": {
         "post": {
            "summary": "Add a new User",
            "requestBody": {
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/User"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Successful operation"
               }
            }
         },
         "get": {
            "summary": "Gets all User",
            "parameters": [
               {
                  "name": "offset",
                  "in": "query",
                  "description": "First returned item (starting at 0)",
                  "schema": {
                     "type": "string"
                  }
               },
               {
                  "name": "size",
                  "in": "query",
                  "description": "Number of maximal returned items",
                  "schema": {
                     "type": "string"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Successful operation",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "array",
                           "items": {
                              "$ref": "#/components/schemas/User"
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components": {
      "schemas": {
         "DanceEvent": {
            "required": [
               "start",
               "title"
            ],
            "properties": {
               "id": {
                  "type": "string",
                  "nullable": true,
                  "readOnly": true
               },
               "start": {
                  "type": "string",
                  "format": "date"
               },
               "title": {
                  "type": "string"
               },
               "description": {
                  "type": "string",
                  "nullable": true
               },
               "organizer": {
                  "type": "string",
                  "$ref": "#/components/schemas/Organizer",
                  "nullable": true
               },
               "location": {
                  "type": "string",
                  "$ref": "#/components/schemas/Location",
                  "nullable": true
               },
               "recur": {
                  "type": "object",
                  "$ref": "#/components/schemas/Recur",
                  "nullable": true
               }
            }
         },
         "Organizer": {
            "required": [
               "name"
            ],
            "properties": {
               "id": {
                  "type": "string",
                  "nullable": true,
                  "readOnly": true
               },
               "name": {
                  "type": "string"
               },
               "address": {
                  "type": "string",
                  "nullable": true
               },
               "city": {
                  "type": "string",
                  "nullable": true
               },
               "country": {
                  "type": "string",
                  "nullable": true
               },
               "homeLocation": {
                  "type": "string",
                  "$ref": "#/components/schemas/Location",
                  "nullable": true
               },
               "url": {
                  "type": "string",
                  "nullable": true
               }
            }
         },
         "Location": {
            "required": [
               "name"
            ],
            "properties": {
               "id": {
                  "type": "string",
                  "nullable": true,
                  "readOnly": true
               },
               "name": {
                  "type": "string"
               },
               "address": {
                  "type": "string",
                  "nullable": true
               },
               "city": {
                  "type": "string",
                  "nullable": true
               },
               "country": {
                  "type": "string",
                  "nullable": true
               },
               "latitude": {
                  "type": "string",
                  "nullable": true
               },
               "longitude": {
                  "type": "string",
                  "nullable": true
               },
               "url": {
                  "type": "string",
                  "nullable": true
               }
            }
         },
         "Recur": {
            "properties": {
               "id": {
                  "type": "string",
                  "nullable": true,
                  "readOnly": true
               },
               "recurFrequency": {
                  "$ref": "#/components/schemas/RecurFrequency",
                  "nullable": true
               },
               "interval": {
                  "type": "integer",
                  "format": "int32",
                  "nullable": true
               },
               "until": {
                  "type": "string",
                  "format": "date",
                  "nullable": true
               },
               "count": {
                  "type": "integer",
                  "format": "int32",
                  "nullable": true
               }
            }
         },
         "RecurFrequency": {
            "type": "string",
            "enum": [
               "DAILY",
               "WEEKLY",
               "MONTHLY",
               "YEARLY"
            ]
         },
         "User": {
            "properties": {
               "id": {
                  "type": "string",
                  "nullable": true,
                  "readOnly": true
               },
               "name": {
                  "type": "string",
                  "nullable": true
               },
               "password": {
                  "type": "object",
                  "$ref": "#/components/schemas/Password",
                  "nullable": true
               },
               "roles": {
                  "type": "array",
                  "items": {
                     "$ref": "#/components/schemas/UserRole"
                  },
                  "nullable": true
               }
            }
         },
         "Password": {
            "properties": {
               "id": {
                  "type": "string",
                  "nullable": true,
                  "readOnly": true
               },
               "hash": {
                  "type": "string",
                  "nullable": true
               },
               "salt": {
                  "type": "string",
                  "nullable": true
               }
            }
         },
         "UserRole": {
            "properties": {
               "id": {
                  "type": "string",
                  "nullable": true,
                  "readOnly": true
               },
               "name": {
                  "type": "string",
                  "nullable": true
               }
            }
         }
      }
   }
}